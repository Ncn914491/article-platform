rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Users can read and write their own user document
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
      allow create: if request.auth != null && request.auth.uid == userId;
    }
    
    // Articles rules
    match /articles/{articleId} {
      // Anyone can read articles (public access)
      allow read: if true;
      
      // Only authenticated pro users can create articles
      allow create: if request.auth != null && 
        exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'pro';
      
      // Only the article author can update or delete their articles
      allow update, delete: if request.auth != null && 
        request.auth.uid == resource.data.authorId;
    }
    
    // Deny all other access
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
